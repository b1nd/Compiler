//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/dev/java/py/src\Pascal.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Pascal.Generated {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="PascalParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface IPascalListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] PascalParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] PascalParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.mainCompound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMainCompound([NotNull] PascalParser.MainCompoundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.mainCompound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMainCompound([NotNull] PascalParser.MainCompoundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.programHeading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgramHeading([NotNull] PascalParser.ProgramHeadingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.programHeading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgramHeading([NotNull] PascalParser.ProgramHeadingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] PascalParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] PascalParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] PascalParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] PascalParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.unsignedInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsignedInteger([NotNull] PascalParser.UnsignedIntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.unsignedInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsignedInteger([NotNull] PascalParser.UnsignedIntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] PascalParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] PascalParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.typeIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeIdentifier([NotNull] PascalParser.TypeIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.typeIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeIdentifier([NotNull] PascalParser.TypeIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.variableDeclarationPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarationPart([NotNull] PascalParser.VariableDeclarationPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.variableDeclarationPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarationPart([NotNull] PascalParser.VariableDeclarationPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] PascalParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] PascalParser.VariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.procedureDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedureDeclaration([NotNull] PascalParser.ProcedureDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.procedureDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedureDeclaration([NotNull] PascalParser.ProcedureDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.procedureHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedureHeader([NotNull] PascalParser.ProcedureHeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.procedureHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedureHeader([NotNull] PascalParser.ProcedureHeaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.parameterGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterGroup([NotNull] PascalParser.ParameterGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.parameterGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterGroup([NotNull] PascalParser.ParameterGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierList([NotNull] PascalParser.IdentifierListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierList([NotNull] PascalParser.IdentifierListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] PascalParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] PascalParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentStatement([NotNull] PascalParser.AssignmentStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentStatement([NotNull] PascalParser.AssignmentStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.assigningVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssigningVariable([NotNull] PascalParser.AssigningVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.assigningVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssigningVariable([NotNull] PascalParser.AssigningVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] PascalParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] PascalParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.relationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationExpression([NotNull] PascalParser.RelationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.relationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationExpression([NotNull] PascalParser.RelationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.addExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpression([NotNull] PascalParser.AddExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.addExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpression([NotNull] PascalParser.AddExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.mulExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulExpression([NotNull] PascalParser.MulExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.mulExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulExpression([NotNull] PascalParser.MulExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.signedFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignedFactor([NotNull] PascalParser.SignedFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.signedFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignedFactor([NotNull] PascalParser.SignedFactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] PascalParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] PascalParser.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.notFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotFactor([NotNull] PascalParser.NotFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.notFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotFactor([NotNull] PascalParser.NotFactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.procedureStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedureStatement([NotNull] PascalParser.ProcedureStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.procedureStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedureStatement([NotNull] PascalParser.ProcedureStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.emptyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptyStatement([NotNull] PascalParser.EmptyStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.emptyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptyStatement([NotNull] PascalParser.EmptyStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundStatement([NotNull] PascalParser.CompoundStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundStatement([NotNull] PascalParser.CompoundStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatements([NotNull] PascalParser.StatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatements([NotNull] PascalParser.StatementsContext context);
}
} // namespace Pascal.Generated
